apiVersion: broker.amq.io/v1beta1
kind: ActiveMQArtemis
metadata:
  name: artemis-a
  application: artemis-a-app
spec:
  acceptors:
  - name: acceptor
    port: 5672
    protocols: amqp,openwire,core
  - name: mirror
    enabledProtocols: TLSv1.2
    expose: true
    port: 5673
    protocols: amqp
    sslEnabled: true
    sslProvider: JDK
    sslSecret: artemis-a-mirror-secret
  addressSettings: {}
  adminPassword: temporal
  adminUser: admin
  brokerProperties:
  - "AMQPConnections.target.uri=tcp://artemis-b-mirror-0-svc-rte-{{ dc_b_artemis_namespace }}.apps.{{ dc_b_domain }}:443?clientFailureCheckPeriod=2000&connectionTTL=5000&sslEnabled=true&verifyHost=false&trustStorePath=/etc/artemis-a-mirror-secret-volume/client.ts&trustStorePassword=abc123"
  - "AMQPConnections.target.retryInterval=5000"
  - "AMQPConnections.target.reconnect-attempts=-1"
  - "AMQPConnections.target.user=admin"
  - "AMQPConnections.target.password=temporal"
  - "AMQPConnections.target.autoStart=true"
  - "AMQPConnections.target.connectionElements.mirror.type=MIRROR"
  - "AMQPConnections.target.connectionElements.mirror.messageAcknowledgements=true"
  - "AMQPConnections.target.connectionElements.mirror.queueCreation=true"
  - "AMQPConnections.target.connectionElements.mirror.queueRemoval=true"
  console:
    expose: true
    sslEnabled: false
  deploymentPlan:
    clustered: true
    extraMounts: {}
    image: placeholder
    journalType: nio
    livenessProbe: {}
    managementRBACEnabled: true
    messageMigration: true
    persistenceEnabled: true
    podSecurity: {}
    readinessProbe: {}
    requireLogin: false
    resources:
      limits:
        cpu: 1
        memory: 1Gi
      requests:
        cpu: 200m
        memory: 128Mi
    size: 1
    storage:
      size: 2Gi
  upgrades:
    enabled: false
    minor: false
